resources:
  containers:
  - container: ci
    image: sbx320/mtasa-blue-azure:latest
    
variables:
  REPO_BRANCH: '$(Build.SourceBranchName)'
  REPO_COMMIT_HASH: '$(Build.SourceVersion)'
  REPO_COMMIT_TITLE: '$(Build.SourceVersionMessage)'
  NIGHTLY_API: 'https://nightlytest.mtasa.com/api/upload'

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - bash: brew install mysql
    displayName: 'Install MySQL'
  - script: ./linux-build.sh
    displayName: 'Run Build'

- job: linux
  pool:
    vmImage: 'Ubuntu 16.04'
  container: ci
  steps:
  - script: ./linux-build.sh
    displayName: 'Run Build'

- job: windows
  pool:
    vmImage: 'VS2017-Win2016'
  variables:
    solution: 'Build/MTASA.sln'
    buildConfiguration: 'Release'
  steps:
  - powershell: Invoke-WebRequest https://mirror.mtasa.com/bdata/DXFiles.zip -OutFile utils/DXFiles.zip
    displayName: 'Download DirectX'
  - powershell: Expand-Archive -Path utils/DXFiles.zip -DestinationPath utils/DXFiles
    displayName: 'Extract DirectX'
  - script: utils\premake5 install_cef
    displayName: 'Install CEF'
  - script: utils\premake5 vs2017
    env:
      DXSDK_DIR: './utils/DXFiles/'
      CI: 'true'
    displayName: 'Create Visual Studio 2017 Solution'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
  - script: utils\premake5 compose_files
    displayName: 'Compose installation files'
  - script: 7z a InstallFiles.zip InstallFiles
    displayName: 'Compress installation files'
  - publish: $(System.DefaultWorkingDirectory)/InstallFiles.zip
    artifact: Windows
    displayName: 'Save installation files'
  
- job: windows_deployment
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: windows
  variables:
    MTA_WINDOWS_ARTIFACT: 'Windows'
    INSTALL_ZIP_FILE: '$(Pipeline.Workspace)/$(MTA_WINDOWS_ARTIFACT)/InstallFiles.zip'
    BUILD_TYPE: 'windows32'
  steps:
  - download: current
    artifact: $(MTA_WINDOWS_ARTIFACT)
    displayName: 'Fetch installation files for Windows'
  - script: curl -i -F "branch_name=$(REPO_BRANCH)" -F "commit_hash=$(REPO_COMMIT_HASH)" -F "commit_title=$(REPO_COMMIT_TITLE)" -F build_type=$(BUILD_TYPE) -F "secret=$(UPLOAD_SECRET)" -F build_upload=@$(INSTALL_ZIP_FILE) $(NIGHTLY_API)
    displayName: 'Upload zip file to MTA builds'

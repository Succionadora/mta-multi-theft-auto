name: Build

# Trigger the workflow on any pull request, push or manual dispatch
on: [pull_request, push, workflow_dispatch]

jobs:
  windows:
    strategy:
      matrix:
        type: [release, debug]
    name: windows-${{ matrix.type }}
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v1
        id: cache-dxfiles
        with:
          path: utils/DXFiles
          key: dxfiles-0001

      - name: Download DirectX
        if: steps.cache-dxfiles.outputs.cache-hit != 'true'
        run: Invoke-WebRequest https://mirror.mtasa.com/bdata/DXFiles.zip -OutFile utils/DXFiles.zip
        shell: powershell

      - name: Extract DirectX
        if: steps.cache-dxfiles.outputs.cache-hit != 'true'
        run: Expand-Archive -Path utils/DXFiles.zip -DestinationPath utils/DXFiles
        shell: powershell

      - name: Install CEF
        run: utils\premake5 install_cef

      - name: Install data files
        run: utils\premake5 install_data

      - name: Run Build [Release]
        if: ${{ matrix.type == 'release' }}
        run: win-build.bat
        shell: cmd
        env:
          DXSDK_DIR: './utils/DXFiles/'
          CI: 'true'

      - name: Run Build [Debug]
        if: ${{ matrix.type == 'debug' }}
        run: win-build.bat Debug
        shell: cmd
        env:
          DXSDK_DIR: './utils/DXFiles/'
          CI: 'true'

      - name: Create build artifacts
        run: utils\premake5 compose_files

      - uses: actions/upload-artifact@master
        if: ${{ matrix.type == 'release' }}
        with:
          name: InstallFiles
          path: InstallFiles/

      - uses: actions/upload-artifact@master
        if: ${{ matrix.type == 'debug' }}
        with:
          name: InstallFiles-debug
          path: InstallFiles/

  macOS:
    strategy:
      matrix:
        type: [release, debug]
    name: macOS-${{ matrix.type }}
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install MySQL
        run: brew install mysql
        continue-on-error: true

      - name: Link MySQL
        run: brew link --overwrite mysql

      - name: Run Build
        run: ./linux-build.sh --config=${{ matrix.type }}

  linux:
    strategy:
      matrix:
        type: [release, debug]
        architecture: [x64, arm64]
        include:
        - architecture: x64
          image-tag: latest
        - architecture: arm64
          image-tag: arm64
    name: linux-${{ matrix.type }}-${{ matrix.architecture }}
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/multitheftauto/mtasa-blue-build:${{ matrix.image-tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Run Build
        run: ./linux-build.sh --arch=${{ matrix.architecture }} --config=${{ matrix.type }}
